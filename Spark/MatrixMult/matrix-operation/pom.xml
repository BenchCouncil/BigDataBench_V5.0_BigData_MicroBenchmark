<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.nju.pasalab</groupId>
    <artifactId>marlin</artifactId>
    <version>0.4-SNAPSHOT</version>
    <name>marlin</name>
    <url>https://github.com/PasaLab/marlin/</url>

    <licenses>
        <license>
            <name>Apache 2.0 License</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:git@github.com:PasaLab/marlin.git</connection>
        <developerConnection>scm:git:git@github.com:PasaLab/marlin.git</developerConnection>
        <url>scm:git:git@github.com:PasaLab/marlin.git</url>
        <tag>HEAD</tag>
    </scm>
    <developers>
        <developer>
            <id>Myasuka</id>
            <name>Cloud Tang</name>
            <email>myasuka@live.com</email>
            <url>https://github.com/Myasuka</url>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spark.version>1.5.2</spark.version>
        <hadoop.version>2.7.1</hadoop.version>
        <java.version>1.7</java.version>
        <scala.version>2.10.4</scala.version>
        <scala.binary.version>2.10</scala.binary.version>
        <breeze.version>0.11.2</breeze.version>
        <colt.version>1.2.0</colt.version>
        <PermGen>64m</PermGen>
        <MaxPermGen>512m</MaxPermGen>
        <CodeCacheSize>512m</CodeCacheSize>
        <!--<marlin.test.home>${session.executionRootDirectory}</marlin.test.home>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-actors</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scalap</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>${hadoop.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.scalanlp</groupId>
            <artifactId>breeze_${scala.binary.version}</artifactId>
            <version>${breeze.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-math3</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.scalanlp</groupId>
            <artifactId>breeze-natives_${scala.binary.version}</artifactId>
            <version>${breeze.version}</version>
        </dependency>

        <dependency>
            <groupId>colt</groupId>
            <artifactId>colt</artifactId>
            <version>${colt.version}</version>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <version>2.2.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>spark-1.1</id>
            <properties>
                <spark.version>1.1.1</spark.version>
                <breeze.version>0.9</breeze.version>
            </properties>
        </profile>
        <profile>
            <id>spark-1.2</id>
            <properties>
                <spark.version>1.2.1</spark.version>
                <breeze.version>0.10</breeze.version>
            </properties>
        </profile>
        <profile>
            <id>spark-1.3</id>
            <properties>
                <spark.version>1.3.1</spark.version>
                <breeze.version>0.11.1</breeze.version>
            </properties>
        </profile>
        <profile>
            <id>spark-1.4</id>
            <properties>
                <spark.version>1.4.1</spark.version>
                <breeze.version>0.11.2</breeze.version>
            </properties>
        </profile>
        <profile>
            <id>spark-1.5</id>
            <properties>
                <spark.version>1.5.2</spark.version>
                <breeze.version>0.11.2</breeze.version>
            </properties>
        </profile>
        <profile>
            <id>spark-1.6</id>
            <properties>
                <spark.version>1.6.1</spark.version>
                <breeze.version>0.11.2</breeze.version>
            </properties>
        </profile>

        <profile>
            <id>hadoop-2.3</id>
            <properties>
                <hadoop.version>2.3.0</hadoop.version>
            </properties>
        </profile>

        <profile>
            <id>hadoop-2.4</id>
            <properties>
                <hadoop.version>2.4.0</hadoop.version>
            </properties>
        </profile>

        <profile>
            <id>hadoop-2.5</id>
            <properties>
                <hadoop.version>2.5.0</hadoop.version>
            </properties>
        </profile>

        <profile>
            <id>hadoop-2.6</id>
            <properties>
                <hadoop.version>2.6.0</hadoop.version>
            </properties>
        </profile>

		<profile>
			<id>hadoop-2.7</id>
			<properties>
		    	<hadoop.version>2.7.1</hadoop.version>
			</properties>
		</profile>

    </profiles>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>3.2.1</version>
                    <configuration>
                        <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.0.2</version>
                </plugin>

            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>eclipse-add-source</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <recompileMode>incremental</recompileMode>
                    <useZincServer>true</useZincServer>
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                    </args>
                    <javacArgs>
                        <javacArg>-source</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${java.version}</javacArg>
                    </javacArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <includes>
                        <include>**/Test*.java</include>
                        <include>**/*Test.java</include>
                        <include>**/*TestCase.java</include>
                        <include>**/*Suite.java</include>
                    </includes>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <environmentVariables>
                        <!--
                          Setting SPARK_DIST_CLASSPATH is a simple way to make sure any child processes
                          launched by the tests have access to the correct test-time classpath.
                        -->
                        <SPARK_DIST_CLASSPATH>${test_classpath}</SPARK_DIST_CLASSPATH>
                    </environmentVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>MarlinTestSuite.txt</filereports>
                    <argLine>-Xmx3g -XX:MaxPermSize=${MaxPermGen} -XX:ReservedCodeCacheSize=512m</argLine>
                    <systemProperties>
                        <marlin.test.home>${session.executionRootDirectory}</marlin.test.home>
                        <java.awt.headless>true</java.awt.headless>
                        <spark.test.home>${marlin.test.home}</spark.test.home>
                        <spark.testing>1</spark.testing>
                        <spark.ui.enabled>false</spark.ui.enabled>
                        <spark.ui.showConsoleProgress>false</spark.ui.showConsoleProgress>
                        <spark.driver.allowMultipleContexts>true</spark.driver.allowMultipleContexts>
                    </systemProperties>
                    <environmentVariables>
                        <!--
                          Setting SPARK_DIST_CLASSPATH is a simple way to make sure any child processes
                          launched by the tests have access to the correct test-time classpath.
                        -->
                        <SPARK_DIST_CLASSPATH>${test_classpath}</SPARK_DIST_CLASSPATH>
                    </environmentVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
