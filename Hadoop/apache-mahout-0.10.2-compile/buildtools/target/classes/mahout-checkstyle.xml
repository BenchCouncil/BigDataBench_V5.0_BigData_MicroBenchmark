<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
  Checkstyle configuration derived from  the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/
-->

<module name="Checker">
  <!--
      If you set the basedir property below, then all reported file
      names will be relative to the specified directory. See
      http://checkstyle.sourceforge.net/5.x/config.html#Checker

      <property name="basedir" value="${basedir}"/>
  -->

  <!-- Checks that a package-info.java file exists for each package.     -->
  <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
  <!--module name="JavadocPackage"/-->

  <!-- Checks whether files end with a new line.                        -->
  <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
  <module name="NewlineAtEndOfFile"/>

  <!-- Checks that property files contain the same keys.         -->
  <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
  <module name="Translation"/>

  <!-- Checks for Size Violations.                    -->
  <!-- See http://checkstyle.sf.net/config_sizes.html -->
  <!--module name="FileLength"/-->

  <!-- Checks for whitespace                               -->
  <!-- See http://checkstyle.sf.net/config_whitespace.html -->
  <module name="FileTabCharacter"/>

  <!-- Miscellaneous other checks.                   -->
  <!-- See http://checkstyle.sf.net/config_misc.html -->
  <!--module name="RegexpSingleline">
    <property name="format" value="\s+$"/>
    <property name="minimum" value="0"/>
    <property name="maximum" value="0"/>
    <property name="message" value="Line has trailing spaces."/>
  </module-->

  <!-- Checks for Headers                                -->
  <!-- See http://checkstyle.sf.net/config_header.html   -->
  <!-- <module name="Header"> -->
  <!--   <property name="headerFile" value="${checkstyle.header.file}"/> -->
  <!--   <property name="fileExtensions" value="java"/> -->
  <!-- </module> -->

  <module name="TreeWalker">

    <!-- Checks for Javadoc comments.                     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <!--module name="JavadocMethod"/>
    <module name="JavadocType"/>
    <module name="JavadocVariable"/>
    <module name="JavadocStyle"/-->


    <!-- Checks for Naming Conventions.                  -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <!-- allow loggers to be named log to not draw to much attention to their invocations -->
    <module name="ConstantName">
      <property name="format" value="^([A-Z][A-Z0-9]*(_[A-Z0-9]+)*|log)$"/>
    </module>
    <!-- Allow variables to start with capital letters. A lot of algorithm implementations should replicate the
        notation from the papers they implement to be comprehensible. Matrices e.g. are mostly named with capital
        letters -->
    <module name="LocalFinalVariableName">
      <property name="format" value="^e[a-zA-Z0-9]|[A-Z]*[a-zA-Z0-9]*$"/>
    </module>
    <module name="LocalVariableName">
      <property name="format" value="^e[a-zA-Z0-9]|[A-Z]*[a-zA-Z0-9]*$"/>
    </module>
    <module name="MemberName">
      <property name="format" value="^e[a-zA-Z0-9]|[A-Z]*[a-zA-Z0-9]*$"/>
    </module>
    <module name="ParameterName">
      <property name="format" value="^e[a-zA-Z0-9]|[A-Z]*[a-zA-Z0-9]*$"/>
    </module>
    <module name="MethodName"/>
    <module name="PackageName"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>


    <!-- Checks for imports                              -->
    <!-- See http://checkstyle.sf.net/config_import.html -->
    <module name="AvoidStarImport"/>
    <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>


    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <!-- we use 120 instead of 80 characters per line -->
    <module name="LineLength">
      <property name="max" value="120"/>
    </module>
    <module name="AnonInnerLength">
      <property name="max" value="40" />
    </module>
    <!--module name="ExecutableStatementCount"-->
    <!--module name="MethodLength"/-->
    <!--module name="ParameterNumber"/-->


    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="EmptyForIteratorPad"/>
    <module name="GenericWhitespace"/>
    <module name="MethodParamPad"/>
    <module name="NoWhitespaceAfter">
      <!-- allow whitespaces for array initialization -->
      <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS"/>
    </module>
    <module name="NoWhitespaceBefore"/>
    <module name="OperatorWrap"/>
    <module name="ParenPad"/>
    <module name="TypecastParenPad"/>
    <!--TODO currently broken because of generics <module name="WhitespaceAfter"/>-->
    <module name="WhitespaceAround">
      <!-- no need to waste space for empty constructors or methods -->
      <property name="allowEmptyConstructors" value="true"/>
      <property name="allowEmptyMethods" value="true"/>
    </module>


    <!-- Modifier Checks                                    -->
    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>


    <!-- Checks for blocks. You know, those {}'s         -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <!--module name="AvoidNestedBlocks"/-->
    <module name="EmptyBlock"/>
    <module name="LeftCurly"/>
    <module name="NeedBraces"/>
    <module name="RightCurly"/>


    <!-- Checks for common coding problems               -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <!--module name="AvoidInlineConditionals"/-->
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <!--module name="HiddenField"/-->
    <module name="IllegalInstantiation"/>
    <!--module name="InnerAssignment"/-->
    <!--module name="MagicNumber"/-->
    <module name="MissingSwitchDefault"/>
    <!--module name="RedundantThrows"/-->
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <!--module name="NestedIfDepth"/-->
    <module name="NestedTryDepth">
      <property name="max" value="3"/>
    </module>
    <module name="UnnecessaryParentheses"/>

    <!-- Checks for class design                         -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <!--module name="DesignForExtension"/-->
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="VisibilityModifier">
      <property name="protectedAllowed" value="true" />
      <property name="packageAllowed" value="true" />
    </module>


    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle"/>
    <!--module name="FinalParameters"/-->
    <!--module name="TodoComment"/-->
    <module name="UpperEll"/>
    <module name="Indentation">
      <property name="caseIndent" value="2"/>
      <property name="basicOffset" value="2"/>
    </module>

  </module>

</module>